# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cart {
  id: String!
  totalPrice: Int!
  itemsIds: [String!]!
  clientId: String
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SubCategory {
  id: String!
  title: String!
  categoryId: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Construction {
  generalDimensions: String!
  delivery: String!
  material: String!
}

type Product {
  id: String!
  title: String!
  price: Float!
  color: String
  quantity: Float!
  description: String
  instructions: String
  construction: Construction
  categoryId: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Category {
  id: String!
  title: String!
  products: [Product!]
  subCategories: [SubCategory!]
  createdAt: DateTime
  updatedAt: DateTime
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String
  slug: String
  email: String
  notVerifiedPhone: String
  verifiedPhone: String
  password: String!
  gender: Gender!
  maritalStatus: maritalStatus!
  role: Role!
  birthDate: DateTime
  country: String
  address: String
  location: String
  profilePicture: String
  isBlocked: Boolean!
  isDeleted: Boolean!
  favLang: String!
  securityGroup: String
  securityGroupId: String
  device: Device
  userVerificationCodes: String
  spokenLanguages: String
  token: String
  fcmTokens: JSON
  cartId: String
  createdAt: DateTime!
  updatedAt: DateTime
}

enum Gender {
  MALE
  FEMALE
}

enum maritalStatus {
  SINGLE
  MARRIED
  WIDOWED
  DIVORCED
}

enum Role {
  USER
  ADMIN
}

enum Device {
  DESKTOP
  IOS
  ANDROID
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Query {
  usersBoard: [User!]!
  findUser: User!
  categoryBoard: [Category!]!
  productBoard: [Product!]!
  subCategoryBoard: [SubCategory!]!
  cartsBoard: [Cart!]!
}

type Mutation {
  register(data: UserCreateInput!): User!
  emailAndPasswordLogin(data: EmailAndPasswordLoginInput!): User!
  createCategory(data: CategoryCreateInput!): Category!
  createProduct(data: ProductCreateInput!): Product!
  createSubCategory(data: SubCategoryCreateInput!): SubCategory!
  createCart(data: CartCreateInput!): Cart!
  payment(data: TransactionCreateInput!): Boolean!
}

input UserCreateInput {
  id: String
  firstName: String!
  lastName: String!
  fullName: String
  slug: String
  email: String
  notVerifiedPhone: String!
  verifiedPhone: String
  password: String!
  gender: GenderEnum
  maritalStatus: maritalStatusEnum
  role: RoleEnum
  birthDate: DateTime
  country: String
  address: String
  location: String
  profilePicture: String
  isBlocked: Boolean
  isDeleted: Boolean
  favLang: String
  securityGroup: String
  securityGroupId: String
  fcmTokens: JSON
  device: DeviceEnum
  userVerificationCodes: String
  spokenLanguages: String
  token: String
  cartId: String
  createdAt: DateTime
  updatedAt: DateTime
}

enum GenderEnum {
  MALE
  FEMALE
}

enum maritalStatusEnum {
  SINGLE
  MARRIED
  WIDOWED
  DIVORCED
}

enum RoleEnum {
  USER
  ADMIN
}

enum DeviceEnum {
  DESKTOP
  IOS
  ANDROID
}

input EmailAndPasswordLoginInput {
  email: String!
  password: String!
  fcmToken: String
  cartId: String
  device: DeviceEnum!
}

input CategoryCreateInput {
  title: String!
}

input ProductCreateInput {
  id: String
  title: String!
  price: Float!
  color: String
  quantity: Float!
  description: String
  instructions: String
  generalDimensions: String
  delivery: String
  material: String
  categoryId: String
  createdAt: DateTime
  updatedAt: DateTime
}

input SubCategoryCreateInput {
  title: String!
  categoryId: String!
}

input CartCreateInput {
  id: String
  totalPrice: Int
  itemsIds: cartCreateItemsIdsInput!
  clientId: String
  createdAt: DateTime = "2023-03-08T16:00:17.100Z"
  updatedAt: DateTime = "2023-03-08T16:00:17.100Z"
}

input cartCreateItemsIdsInput {
  set: [String!]!
}

input TransactionCreateInput {
  id: String
  userId: String
  paymentMethod: PaymentMethodEnum!
  paymentStatus: PaymentStatusEnum!
  failureReason: String
  cartId: String!
  createdAt: DateTime
  updatedAt: DateTime
}

enum PaymentMethodEnum {
  USER_WALLET
  STRIPE_CREDIT_CARD
}

enum PaymentStatusEnum {
  SUCCEEDED
  FAILED
  PENDED
  REFUNDED
}